/* tslint:disable */
/* eslint-disable */
/**
 * Mild Blue - Covid Vaxx
 * Covid Vaxx API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@mild.blue
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnswerDtoIn,
    AnswerDtoInFromJSON,
    AnswerDtoInFromJSONTyped,
    AnswerDtoInToJSON,
    ConfirmationDtoIn,
    ConfirmationDtoInFromJSON,
    ConfirmationDtoInFromJSONTyped,
    ConfirmationDtoInToJSON,
    PhoneNumberDtoIn,
    PhoneNumberDtoInFromJSON,
    PhoneNumberDtoInFromJSONTyped,
    PhoneNumberDtoInToJSON,
} from './';

/**
 * 
 * @export
 * @interface PatientRegistrationDtoIn
 */
export interface PatientRegistrationDtoIn {
    /**
     * 
     * @type {Array<AnswerDtoIn>}
     * @memberof PatientRegistrationDtoIn
     */
    answers: Array<AnswerDtoIn>;
    /**
     * 
     * @type {ConfirmationDtoIn}
     * @memberof PatientRegistrationDtoIn
     */
    confirmation: ConfirmationDtoIn;
    /**
     * 
     * @type {string}
     * @memberof PatientRegistrationDtoIn
     */
    district: string;
    /**
     * 
     * @type {string}
     * @memberof PatientRegistrationDtoIn
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof PatientRegistrationDtoIn
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof PatientRegistrationDtoIn
     */
    indication?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatientRegistrationDtoIn
     */
    insuranceCompany: PatientRegistrationDtoInInsuranceCompanyEnum;
    /**
     * 
     * @type {string}
     * @memberof PatientRegistrationDtoIn
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof PatientRegistrationDtoIn
     */
    personalNumber: string;
    /**
     * 
     * @type {PhoneNumberDtoIn}
     * @memberof PatientRegistrationDtoIn
     */
    phoneNumber: PhoneNumberDtoIn;
    /**
     * 
     * @type {number}
     * @memberof PatientRegistrationDtoIn
     */
    zipCode: number;
}

/**
* @export
* @enum {string}
*/
export enum PatientRegistrationDtoInInsuranceCompanyEnum {
    Vzp = 'VZP',
    Vozp = 'VOZP',
    Cpzp = 'CPZP',
    Ozp = 'OZP',
    Zps = 'ZPS',
    Zpmv = 'ZPMV',
    Rbp = 'RBP'
}

export function PatientRegistrationDtoInFromJSON(json: any): PatientRegistrationDtoIn {
    return PatientRegistrationDtoInFromJSONTyped(json, false);
}

export function PatientRegistrationDtoInFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatientRegistrationDtoIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'answers': ((json['answers'] as Array<any>).map(AnswerDtoInFromJSON)),
        'confirmation': ConfirmationDtoInFromJSON(json['confirmation']),
        'district': json['district'],
        'email': json['email'],
        'firstName': json['firstName'],
        'indication': !exists(json, 'indication') ? undefined : json['indication'],
        'insuranceCompany': json['insuranceCompany'],
        'lastName': json['lastName'],
        'personalNumber': json['personalNumber'],
        'phoneNumber': PhoneNumberDtoInFromJSON(json['phoneNumber']),
        'zipCode': json['zipCode'],
    };
}

export function PatientRegistrationDtoInToJSON(value?: PatientRegistrationDtoIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'answers': ((value.answers as Array<any>).map(AnswerDtoInToJSON)),
        'confirmation': ConfirmationDtoInToJSON(value.confirmation),
        'district': value.district,
        'email': value.email,
        'firstName': value.firstName,
        'indication': value.indication,
        'insuranceCompany': value.insuranceCompany,
        'lastName': value.lastName,
        'personalNumber': value.personalNumber,
        'phoneNumber': PhoneNumberDtoInToJSON(value.phoneNumber),
        'zipCode': value.zipCode,
    };
}


