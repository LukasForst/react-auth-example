/* tslint:disable */
/* eslint-disable */
/**
 * Mild Blue - Covid Vaxx
 * Covid Vaxx API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@mild.blue
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PersonnelDtoOut,
    PersonnelDtoOutFromJSON,
    PersonnelDtoOutFromJSONTyped,
    PersonnelDtoOutToJSON,
} from './';

/**
 * 
 * @export
 * @interface VaccinationDetailDtoOut
 */
export interface VaccinationDetailDtoOut {
    /**
     * 
     * @type {string}
     * @memberof VaccinationDetailDtoOut
     */
    bodyPart: VaccinationDetailDtoOutBodyPartEnum;
    /**
     * 
     * @type {PersonnelDtoOut}
     * @memberof VaccinationDetailDtoOut
     */
    doctor: PersonnelDtoOut;
    /**
     * 
     * @type {Date}
     * @memberof VaccinationDetailDtoOut
     */
    exportedToIsinOn?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDetailDtoOut
     */
    notes?: string | null;
    /**
     * 
     * @type {PersonnelDtoOut}
     * @memberof VaccinationDetailDtoOut
     */
    nurse?: PersonnelDtoOut;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDetailDtoOut
     */
    patientId: string;
    /**
     * 
     * @type {Date}
     * @memberof VaccinationDetailDtoOut
     */
    vaccinatedOn: Date;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDetailDtoOut
     */
    vaccinationId: string;
    /**
     * 
     * @type {string}
     * @memberof VaccinationDetailDtoOut
     */
    vaccineSerialNumber: string;
}

/**
* @export
* @enum {string}
*/
export enum VaccinationDetailDtoOutBodyPartEnum {
    DominantHand = 'DOMINANT_HAND',
    NonDominantHand = 'NON_DOMINANT_HAND',
    Buttock = 'BUTTOCK'
}

export function VaccinationDetailDtoOutFromJSON(json: any): VaccinationDetailDtoOut {
    return VaccinationDetailDtoOutFromJSONTyped(json, false);
}

export function VaccinationDetailDtoOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaccinationDetailDtoOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bodyPart': json['bodyPart'],
        'doctor': PersonnelDtoOutFromJSON(json['doctor']),
        'exportedToIsinOn': !exists(json, 'exportedToIsinOn') ? undefined : (json['exportedToIsinOn'] === null ? null : new Date(json['exportedToIsinOn'])),
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'nurse': !exists(json, 'nurse') ? undefined : PersonnelDtoOutFromJSON(json['nurse']),
        'patientId': json['patientId'],
        'vaccinatedOn': (new Date(json['vaccinatedOn'])),
        'vaccinationId': json['vaccinationId'],
        'vaccineSerialNumber': json['vaccineSerialNumber'],
    };
}

export function VaccinationDetailDtoOutToJSON(value?: VaccinationDetailDtoOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bodyPart': value.bodyPart,
        'doctor': PersonnelDtoOutToJSON(value.doctor),
        'exportedToIsinOn': value.exportedToIsinOn === undefined ? undefined : (value.exportedToIsinOn === null ? null : value.exportedToIsinOn.toISOString()),
        'notes': value.notes,
        'nurse': PersonnelDtoOutToJSON(value.nurse),
        'patientId': value.patientId,
        'vaccinatedOn': (value.vaccinatedOn.toISOString()),
        'vaccinationId': value.vaccinationId,
        'vaccineSerialNumber': value.vaccineSerialNumber,
    };
}


