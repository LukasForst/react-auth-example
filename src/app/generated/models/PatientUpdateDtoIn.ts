/* tslint:disable */
/* eslint-disable */
/**
 * Mild Blue - Covid Vaxx
 * Covid Vaxx API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@mild.blue
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnswerDtoIn,
    AnswerDtoInFromJSON,
    AnswerDtoInFromJSONTyped,
    AnswerDtoInToJSON,
    PhoneNumberDtoIn,
    PhoneNumberDtoInFromJSON,
    PhoneNumberDtoInFromJSONTyped,
    PhoneNumberDtoInToJSON,
} from './';

/**
 * 
 * @export
 * @interface PatientUpdateDtoIn
 */
export interface PatientUpdateDtoIn {
    /**
     * 
     * @type {Array<AnswerDtoIn>}
     * @memberof PatientUpdateDtoIn
     */
    answers?: Array<AnswerDtoIn> | null;
    /**
     * 
     * @type {string}
     * @memberof PatientUpdateDtoIn
     */
    district?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatientUpdateDtoIn
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatientUpdateDtoIn
     */
    firstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatientUpdateDtoIn
     */
    insuranceCompany?: PatientUpdateDtoInInsuranceCompanyEnum;
    /**
     * 
     * @type {string}
     * @memberof PatientUpdateDtoIn
     */
    lastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatientUpdateDtoIn
     */
    personalNumber?: string | null;
    /**
     * 
     * @type {PhoneNumberDtoIn}
     * @memberof PatientUpdateDtoIn
     */
    phoneNumber?: PhoneNumberDtoIn;
    /**
     * 
     * @type {number}
     * @memberof PatientUpdateDtoIn
     */
    zipCode?: number | null;
}

/**
* @export
* @enum {string}
*/
export enum PatientUpdateDtoInInsuranceCompanyEnum {
    Vzp = 'VZP',
    Vozp = 'VOZP',
    Cpzp = 'CPZP',
    Ozp = 'OZP',
    Zps = 'ZPS',
    Zpmv = 'ZPMV',
    Rbp = 'RBP'
}

export function PatientUpdateDtoInFromJSON(json: any): PatientUpdateDtoIn {
    return PatientUpdateDtoInFromJSONTyped(json, false);
}

export function PatientUpdateDtoInFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatientUpdateDtoIn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'answers': !exists(json, 'answers') ? undefined : (json['answers'] === null ? null : (json['answers'] as Array<any>).map(AnswerDtoInFromJSON)),
        'district': !exists(json, 'district') ? undefined : json['district'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'insuranceCompany': !exists(json, 'insuranceCompany') ? undefined : json['insuranceCompany'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'personalNumber': !exists(json, 'personalNumber') ? undefined : json['personalNumber'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : PhoneNumberDtoInFromJSON(json['phoneNumber']),
        'zipCode': !exists(json, 'zipCode') ? undefined : json['zipCode'],
    };
}

export function PatientUpdateDtoInToJSON(value?: PatientUpdateDtoIn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'answers': value.answers === undefined ? undefined : (value.answers === null ? null : (value.answers as Array<any>).map(AnswerDtoInToJSON)),
        'district': value.district,
        'email': value.email,
        'firstName': value.firstName,
        'insuranceCompany': value.insuranceCompany,
        'lastName': value.lastName,
        'personalNumber': value.personalNumber,
        'phoneNumber': PhoneNumberDtoInToJSON(value.phoneNumber),
        'zipCode': value.zipCode,
    };
}


