/* tslint:disable */
/* eslint-disable */
/**
 * Mild Blue - Covid Vaxx
 * Covid Vaxx API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@mild.blue
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AnswerDtoOut,
    AnswerDtoOutFromJSON,
    AnswerDtoOutFromJSONTyped,
    AnswerDtoOutToJSON,
    DataCorrectnessConfirmationDtoOut,
    DataCorrectnessConfirmationDtoOutFromJSON,
    DataCorrectnessConfirmationDtoOutFromJSONTyped,
    DataCorrectnessConfirmationDtoOutToJSON,
    VaccinationDtoOut,
    VaccinationDtoOutFromJSON,
    VaccinationDtoOutFromJSONTyped,
    VaccinationDtoOutToJSON,
} from './';

/**
 * 
 * @export
 * @interface PatientDtoOut
 */
export interface PatientDtoOut {
    /**
     * 
     * @type {Array<AnswerDtoOut>}
     * @memberof PatientDtoOut
     */
    answers: Array<AnswerDtoOut>;
    /**
     * 
     * @type {DataCorrectnessConfirmationDtoOut}
     * @memberof PatientDtoOut
     */
    dataCorrect?: DataCorrectnessConfirmationDtoOut;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    district: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    indication?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    insuranceCompany: PatientDtoOutInsuranceCompanyEnum;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    personalNumber: string;
    /**
     * 
     * @type {string}
     * @memberof PatientDtoOut
     */
    phoneNumber: string;
    /**
     * 
     * @type {Date}
     * @memberof PatientDtoOut
     */
    registeredOn: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatientDtoOut
     */
    registrationEmailSentOn?: Date | null;
    /**
     * 
     * @type {VaccinationDtoOut}
     * @memberof PatientDtoOut
     */
    vaccinated?: VaccinationDtoOut;
    /**
     * 
     * @type {number}
     * @memberof PatientDtoOut
     */
    zipCode: number;
}

/**
* @export
* @enum {string}
*/
export enum PatientDtoOutInsuranceCompanyEnum {
    Vzp = 'VZP',
    Vozp = 'VOZP',
    Cpzp = 'CPZP',
    Ozp = 'OZP',
    Zps = 'ZPS',
    Zpmv = 'ZPMV',
    Rbp = 'RBP'
}

export function PatientDtoOutFromJSON(json: any): PatientDtoOut {
    return PatientDtoOutFromJSONTyped(json, false);
}

export function PatientDtoOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatientDtoOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'answers': ((json['answers'] as Array<any>).map(AnswerDtoOutFromJSON)),
        'dataCorrect': !exists(json, 'dataCorrect') ? undefined : DataCorrectnessConfirmationDtoOutFromJSON(json['dataCorrect']),
        'district': json['district'],
        'email': json['email'],
        'firstName': json['firstName'],
        'id': json['id'],
        'indication': !exists(json, 'indication') ? undefined : json['indication'],
        'insuranceCompany': json['insuranceCompany'],
        'lastName': json['lastName'],
        'personalNumber': json['personalNumber'],
        'phoneNumber': json['phoneNumber'],
        'registeredOn': (new Date(json['registeredOn'])),
        'registrationEmailSentOn': !exists(json, 'registrationEmailSentOn') ? undefined : (json['registrationEmailSentOn'] === null ? null : new Date(json['registrationEmailSentOn'])),
        'vaccinated': !exists(json, 'vaccinated') ? undefined : VaccinationDtoOutFromJSON(json['vaccinated']),
        'zipCode': json['zipCode'],
    };
}

export function PatientDtoOutToJSON(value?: PatientDtoOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'answers': ((value.answers as Array<any>).map(AnswerDtoOutToJSON)),
        'dataCorrect': DataCorrectnessConfirmationDtoOutToJSON(value.dataCorrect),
        'district': value.district,
        'email': value.email,
        'firstName': value.firstName,
        'id': value.id,
        'indication': value.indication,
        'insuranceCompany': value.insuranceCompany,
        'lastName': value.lastName,
        'personalNumber': value.personalNumber,
        'phoneNumber': value.phoneNumber,
        'registeredOn': (value.registeredOn.toISOString()),
        'registrationEmailSentOn': value.registrationEmailSentOn === undefined ? undefined : (value.registrationEmailSentOn === null ? null : value.registrationEmailSentOn.toISOString()),
        'vaccinated': VaccinationDtoOutToJSON(value.vaccinated),
        'zipCode': value.zipCode,
    };
}


